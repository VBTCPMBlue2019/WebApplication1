@page
@model IndexModel
@{
    ViewData["Title"] = "Home";
}
</p>
All C++ Functions </p>

 <a>#, ##</a> -	manipulate strings </p> 
 <a>#define</a> - define variables </p>
<a>    #error</a> - display an error message </p>
<a>    #if, #ifdef, #ifndef, #else, #elif, #endif</a> - conditional operators </p>
<a>    #include</a> - insert the contents of another file </p>
<a>    #line</a> - set line and file information </p>
<a>    #pragma</a> - implementation specific command </p>
<a>    #undef</a> - used to undefine variables </p>
<a>    abort</a> - stops the program </p>
<a>    abs</a> - absolute value </p>
<a>    acos</a> - arc cosine </p>
<a>    asctime</a> - a textual version of the time </p>
<a>    asin</a> - arc sine </p>
<a>    assert</a> - stops the program if an expression isn't true </p>
<a>    atan</a> - arc tangent </p>
<a>    atan2</a> - arc tangent, using signs to determine quadrants </p>
<a>    atexit</a> - sets a function to be called when the program exits </p>
<a>    atof</a> - converts a string to a double </p>
<a>    atoi</a> - converts a string to an integer </p>
<a>    atol</a> - converts a string to a long </p>
<a>    bsearch</a> - perform a binary search </p>
<a>    calloc</a> - allocates and clears a two-dimensional chunk of memory </p>
<a>    ceil</a> - the smallest integer not less than a certain value </p>
<a>    clearerr</a> - clears errors </p>
<a>    clock</a> - returns the amount of time that the program has been running </p>
<a>    cos</a> - cosine </p>
<a>    cosh</a> - hyperbolic cosine </p>
<a>    ctime</a> - returns a specifically formatted version of the time </p>
<a>    difftime</a> - the difference between two times </p>
<a>    div</a> - returns the quotient and remainder of a division </p>
<a>    exit</a> - stop the program </p>
<a>    exp </a> - returns "e" raised to a given power </p>
<a>    fabs</a> - absolute value for floating-point numbers </p>
<a>    fclose</a> - close a file </p>
<a>    feof</a> - true if at the end-of-file </p>
<a>    ferror</a> - checks for a file error </p>
<a>    fflush</a> - writes the contents of the output buffer </p>
<a>    fgetc</a> - get a character from a stream </p>
<a>    fgetpos</a> - get the file position indicator </p>
<a>    fgets</a> - get a string of characters from a stream </p>
<a>    floor</a> - returns the largest integer not greater than a given value </p>
<a>    fmod</a> - returns the remainder of a division </p>
<a>    fopen</a> - open a file </p>
<a>    fprintf</a> - print formatted output to a file </p>
<a>    fputc</a> - write a character to a file </p>
<a>    fputs</a> - write a string to a file </p>
<a>    fread</a> - read from a file </p>
<a>    free</a> - returns previously allocated memory to the operating system </p>
<a>    freopen</a> - open an existing stream with a different name </p>
<a>    frexp</a> - decomposes a number into scientific notation </p>
<a>    fscanf</a> - read formatted input from a file </p>
<a>    fseek</a> - move to a specific location in a file </p>
<a>    fsetpos</a> - move to a specific location in a file </p>
<a>    ftell</a> - returns the current file position indicator </p>
<a>    fwrite</a> - write to a file </p>
<a>    getc</a> - read a character from a file </p>
<a>    getchar</a> - read a character from STDIN </p>
<a>    getenv</a> - get enviornment information about a variable </p>
<a>    gets</a> - read a string from STDIN </p>
<a>    gmtime</a> - returns a pointer to the current Greenwich Mean Time </p>
<a>    isalnum</a> - true if a character is alphanumeric </p>
<a>    isalpha</a> - true if a character is alphabetic </p>
<a>    iscntrl</a> - true if a character is a control character </p>
<a>    isdigit</a> - true if a character is a digit </p>
<a>    isgraph</a> - true if a character is a graphical character </p>
<a>    islower</a> - true if a character is lowercase </p>
<a>    isprint</a> - true if a character is a printing character </p>
<a>    ispunct</a> - true if a character is punctuation </p>
<a>    isspace</a> - true if a character is a space character </p>
<a>    isupper</a> - true if a character is an uppercase character </p>
<a>    isxdigit</a> - true if a character is a hexidecimal character </p>
<a>    labs</a> - absolute value for long integers </p>
<a>    ldexp</a> - computes a number in scientific notation </p>
<a>    ldiv</a> - returns the quotient and remainder of a division, in long integer form </p>
<a>    localtime</a> - returns a pointer to the current time </p>
<a>    log</a> - natural logarithm </p>
<a>    log10</a> - natural logarithm, in base 10 </p>
<a>    longjmp</a> - start execution at a certain point in the program </p>
<a>    malloc</a> - allocates memory </p>
<a>    memchr</a> - searches an array for the first occurance of a character </p>
<a>    memcmp</a> - compares two buffers </p>
<a>    memcpy</a> - copies one buffer to another </p>
<a>    memmove</a> - moves one buffer to another </p>
<a>    memset</a> - fills a buffer with a character </p>
<a>    mktime</a> - returns the calendar version of a given time </p>
<a>    modf</a> - decomposes a number into integer and fractional parts </p>
<a>    perror</a> - displays a string version of the current error to STDERR </p>
<a>    pow	- returns a given number raised to another number </p>
<a>    printf</a> - write formatted output to STDOUT </p>
<a>    putc</a> - write a character to a stream </p>
<a>    putchar</a> - write a character to STDOUT </p>
<a>    puts</a> - write a string to STDOUT </p>
<a>    qsort</a> - perform a quicksort </p>
<a>    raise</a> - send a signal to the program </p>
<a>    rand</a> - returns a pseudorandom number </p>
<a>    realloc</a> - changes the size of previously allocated memory </p>
<a>    remove</a> - erase a file </p>
<a>    rename</a> - rename a file </p>
<a>    rewind</a> - move the file position indicator to the beginning of a file </p>
<a>    scanf</a> - read formatted input from STDIN </p>
<a>    setbuf</a> - set the buffer for a specific stream </p>
<a>    setjmp</a> - set execution to start at a certain point </p>
<a>    setlocale</a> - sets the current locale </p>
<a>    setvbuf</a> - set the buffer and size for a specific stream </p>
<a>    signal</a> - register a function as a signal handler </p>
<a>    sin</a> - sine </p>
<a>    sinh</a> - hyperbolic sine </p>
<a>    sprintf</a> - write formatted output to a buffer </p>
<a>    sqrt</a> - square root </p>
<a>    srand</a> - initialize the random number generator </p>
<a>    sscanf</a> - read formatted input from a buffer </p>
<a>    strcat</a> - concatenates two strings </p>
<a>    strchr</a> - finds the first occurance of a character in a string </p>
<a>    strcmp</a> - compares two strings </p>
<a>    strcoll</a> - compares two strings in accordance to the current locale </p>
<a>    strcpy</a> - copies one string to another </p>
<a>    strcspn</a> - searches one string for any characters in another </p>
<a>    strerror</a> - returns a text version of a given error code </p>
<a>    strftime</a> - returns individual elements of the date and time </p>
<a>    strlen</a> - returns the length of a given string </p>
<a>    strncat</a> - concatenates a certain amount of characters of two strings </p>
<a>    strncmp</a> - compares a certain amount of characters of two strings </p>
<a>    strncpy</a> - copies a certain amount of characters from one string to another </p>
<a>    strpbrk</a> - finds the first location of any character in one string, in another string </p>
<a>    strrchr</a> - finds the last occurance of a character in a string </p>
<a>    strspn</a> - returns the length of a substring of characters of a string </p>
<a>    strstr</a> - finds the first occurance of a substring of characters
<a>    strtod</a> - converts a string to a double </p>
<a>    strtok</a> - finds the next token in a string </p>
<a>    strtol</a> - converts a string to a long </p>
<a>    strtoul</a> - converts a string to an unsigned long </p>
<a>    strxfrm</a> - converts a substring so that it can be used by string comparison functions </p>
<a>    system</a> - perform a system call </p>
<a>    tan</a> - tangent </p>
<a>    tanh</a> - hyperbolic tangent </p>
<a>    time</a> - returns the current calendar time of the system </p>
<a>    tmpfile</a> - return a pointer to a temporary file </p>
<a>    tmpnam</a> - return a unique filename </p>
<a>    tolower</a> - converts a character to lowercase </p>
<a>    toupper</a> - converts a character to uppercase </p>
<a>    ungetc</a> - puts a character back into a stream </p>
<a>    va_arg</a> - use variable length parameter lists </p>
<a>    vprintf, vfprintf, and vsprintf</a> - write formatted outputs with variable argument lists </p>

